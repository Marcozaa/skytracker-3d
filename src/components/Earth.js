/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: PatelDev (https://sketchfab.com/PatelDev)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/earth-f7a76c63ff1846afb2d606e5c8369c15
title: Earth
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { Plane } from "./Plane";
import { useSpring, a } from "@react-spring/three";
import { ISS } from "./ISS";

const LON_OFFSET = -Math.PI / 2;

export function Earth({ marker }) {
  const { nodes, materials } = useGLTF("/earth.glb");

  const [isZoomed, setIsZoomed] = useState(false);

  const { lat, lon } = marker;

  const latRad = (lat * Math.PI) / 180;
  const lonRad = -(lon * Math.PI) / 180 + LON_OFFSET;

  const { scale, markerPosition, rotation } = useSpring({
    scale: isZoomed ? 6 : 2,
    markerPosition: isZoomed ? [0, 0, 6] : [0, 0, 2],
    rotation: [latRad, lonRad, 0],
  });

  return (
    <>
      <a.group
        onClick={() => setIsZoomed(!isZoomed)}
        scale={scale}
        dispose={null}
        rotation={rotation}
      >
        <group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_4.geometry}
            material={materials["Scene_-_Root"]}
          />
        </group>
      </a.group>
      {marker?.type === "human" ? (
        <a.mesh position={markerPosition}>
          <sphereGeometry args={[0.1]} />
          <meshStandardMaterial color={"red"} />
        </a.mesh>
      ) : marker?.type === "satellite" ? (
        <ISS />
      ) : (
        <Plane id={"aa01be"} />
      )}
    </>
  );
}

useGLTF.preload("/earth.glb");
